---
import MainLayout from './MainLayout.astro';

import { formatDate, orderByDate } from '../helpers';
import { getCollection } from 'astro:content';

const { type, title, description, publishedAt, path, nofollow, noindex, tags } = Astro.props;

const entries = orderByDate(
    await getCollection(type === 'original' ? 'posts' : 'projects', ({data}) => !data.draft)
);

const postIndex = entries.findIndex(entry => `/${entry.slug}` === path);

const previousPost = entries.length >= 1 || (entries.length - 1) === 0 ? entries[postIndex + 1] : null;
---

<MainLayout
    title={`${title} — Jhon Achata`}
    description={description}
    path={path}
    nofollow={nofollow}
    noindex={noindex}
>
    <header class="space-y-2 border-b border-purple-400 pb-2">
        {
            tags.length > 0 && (
                <ul class="flex text-sm text-purple-500 space-x-2">
                    {tags.map((tag) => (
                        <li>#{tag}</li>
                    ))}
                </ul>
            )
        }
        <h2 class="font-mono text-2xl md:text-3xl font-bold">{title}</h2>
        <p class="text-xs text-slate-600 pt-2">Escrito por Jhon Achata el {formatDate(publishedAt)}</p>
    </header>
    <article class="font-body border-b border-gray-300 pb-4 prose prose-img:w-full prose-a:text-red-700 prose-a:font-bold">
        <slot />
    </article>
    <section class="flex justify-between text-sm font-semibold">
        <!-- <a href="#" class="">Atrás</a> -->
        {
            previousPost && (<span>Te puede interesar: <a href={`/${previousPost.slug}`} class="w-full p-2 text-purple-500">{ previousPost.data.title }</a></span>)
        }
        <!-- <a href="#" class="text-purple-500">Ultimo post que te puede interesar</a> -->
    </section>
</MainLayout>
